# ---
# apiVersion: helm.toolkit.fluxcd.io/v2beta1
# kind: HelmRelease
# metadata:
#   name: grafana
#   namespace: monitoring
# spec:
#   interval: 5m
#   chart:
#     spec:
#       # renovate: registryUrl=https://grafana.github.io/helm-charts
#       chart: grafana
#       version: 6.59.4
#       sourceRef:
#         kind: HelmRepository
#         name: grafana-charts
#         namespace: flux-system
#       interval: 5m
#   values:
#     replicas: 1
#     deploymentStrategy:
#       type: Recreate

#     grafana.ini: /
#       instance_name = grafana.midka.dev

#       [database]
#       type = postgres
#       host = $__file{/etc/secrets/}
#       name = $__file{/etc/secrets/}
#       user = $__file{/etc/secrets/}
#       password = $__file{/etc/secrets/}

#       # analytics:
#       #   check_for_updates: false
#       #   check_for_plugin_updates: false
#       #   reporting_enabled: false
#       # date_formats:
#       #   use_browser_locale: true
#       # explore:
#       #   enabled: true
#       # log:
#       #   mode: console
#       # news:
#       #   news_feed_enabled: false
#       # paths:
#       #   data: /var/lib/grafana/data
#       #   logs: /var/log/grafana
#       #   plugins: /var/lib/grafana/plugins
#       #   provisioning: /etc/grafana/provisioning
#       #   security:
#       #     allow_embedding: true
#       #     cookie_samesite: grafana
#       # server:
#       #   root_url: https://grafana.midka.dev

#     persistence:
#       enabled: true
#       existingClaim: grafana-data

#     resources:
#       limits:
#         memory: 219M
#       requests:
#         cpu: 23m
#         memory: 127M

#     serviceMonitor:
#       enabled: false

#     datasources:
#       enabled: true
#       labelValue: ''
#       searchNamespace: ALL
#       datasources.yaml:
#         apiVersion: 1
#         deleteDatasources:
#           - name: Loki
#             orgId: 1
#           - name: Alertmanager
#             orgId: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana-oss:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 219M
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: config.ini
              readOnly: true
            - name: db-credentials
              mountPath: /etc/secrets
              readOnly: true

      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: db-credentials
          secret:
            secretName: grafana-db-app
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  ports:
    - name: http-grafana
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: grafana
  type: ClusterIP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
  namespace: monitoring
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: Host(`grafana.midka.dev`)
      services:
        - name: grafana
          port: 80
          kind: Service
  tls:
    certResolver: le-staging
