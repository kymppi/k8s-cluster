---
apiVersion: v1
kind: ConfigMap
data:
  tempo.yaml: |
    auth_enabled: true
    target: all

    server:
      http_listen_address: 0.0.0.0
      http_listen_port: 3200

    storage_config:
      tsdb_shipper:
        active_index_directory: /tempo/index
        cache_location: /tempo/index_cache

    schema_config:
      configs:
      - from: 2020-05-15
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: index_
          period: 24h

    ruler:
      storage:
        s3:
          bucketnames: tempo-ruler

    compactor:
      working_directory: /tmp/tempo/compactor
      compaction_interval: 30m

    common:
      ring:
        kvstore:
          store: memberlist
      replication_factor: 1
      path_prefix: /tempo
      storage:
        s3:
          endpoint: ${AWS_ENDPOINT}
          insecure: false
          bucketnames: tempo
          access_key_id: ${AWS_ACCESS_KEY_ID}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          s3forcepathstyle: true

    memberlist:
      cluster_label: loki
      join_members:
        - dnssrv+tempo.monitoring.svc.cluster.local:7946
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
      worker_connections 1024;
    }

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;

      map $http_authorization $auth_header_present {
        default 0;
        "~.*" 1;
      }

      server {
        listen 80;
        server_name _;

        location / {
          if ($auth_header_present = 0) {
            return 401;
          }

          auth_request /auth;
          auth_request_set $auth_status $upstream_status;
          auth_request_set $x_scope_orgid $upstream_http_x_scope_orgid;

          proxy_set_header X-Scope-Orgid $x_scope_orgid;

          proxy_pass http://localhost:3200/;
        }

        location /auth {
          internal;
          # auth server url here
          proxy_pass http://grafana-multitenancy.monitoring.svc.cluster.local:3000/auth/;
          proxy_pass_request_body off;
          proxy_set_header Content-Length "";
          proxy_set_header X-Original-URI $request_uri;
          proxy_set_header X-Original-Remote-Addr $remote_addr;
        }
      }
    }
  runtime.yaml: |
    overrides:
      1:
        ingestion_rate_mb: 10
        max_streams_per_user: 100000
        max_chunks_per_query: 100000
      2:
        max_streams_per_user: 100000
        max_chunks_per_query: 100000
metadata:
  name: grafana-tempo-config
  namespace: monitoring
