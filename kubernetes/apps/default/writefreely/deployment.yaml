apiVersion: apps/v1
kind: Deployment
metadata:
  name: writefreely
  namespace: default
  labels:
    app: writefreely
spec:
  replicas: 1
  selector:
    matchLabels:
      app: writefreely
  template:
    metadata:
      labels:
        app: writefreely
    spec:
      containers:
        - name: writefreely
          image: writeas/writefreely:0.12.0
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: /go/config.ini
              subPath: config.ini
            - name: workdir
              mountPath: /go/keys
            - name: data
              mountPath: /go/data
          ports:
            - containerPort: 8080
      initContainers:
        - name: create-database
          image: esolang/sqlite3:latest
          imagePullPolicy: Always
          command:
            - 'sqlite3'
            - '/go/data/writefreely.db'
          volumeMounts:
            - name: data
              mountPath: /go/data
        - name: init-database
          image: writeas/writefreely:0.12.0
          imagePullPolicy: Always
          command:
            - './cmd/writefreely/writefreely'
            - 'db'
            - 'init'
          volumeMounts:
            - name: data
              mountPath: /go/data
            - name: config
              mountPath: /go/config.ini
              subPath: config.ini
            - name: workdir
              mountPath: /go/keys
        - name: install
          image: writeas/writefreely:0.12.0
          imagePullPolicy: Always
          command:
            - './cmd/writefreely/writefreely'
            - '-gen-keys'
          volumeMounts:
            - name: config
              mountPath: /go/config.ini
              subPath: config.ini
            - name: workdir
              mountPath: /go/keys
            - name: data
              mountPath: /go/data
      volumes:
        - name: workdir
          persistentVolumeClaim:
            claimName: writefreely-keys
        - name: config
          configMap:
            name: wfconfig
        - name: data
          persistentVolumeClaim:
            claimName: writefreely-data
---
apiVersion: v1
kind: Service
metadata:
  name: writefreely
spec:
  type: ClusterIP
  selector:
    app: writefreely
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: writefreely
  namespace: default
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`i11l.blog`)
      kind: Rule
      services:
        - name: writefreely
          port: 80
          kind: Service
  tls:
    certResolver: le
